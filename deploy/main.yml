---
- name: Deploy to droplet
  hosts: droplet
  tasks:
    - name: checkout repository
      ansible.builtin.git:
        repo: '{{ rasa_repo }}'
        dest: '{{ checkout_path }}'
        version: '{{ rasa_branch }}'
        force: true
    - name: stop rasa if running
      tags: stop
      block:
        - name: Kill rasa processes
          ansible.builtin.shell: pkill rasa
          args:
            chdir: '{{ checkout_path }}'
          register: pkill_result
          ignore_errors: true
        # pkill signals errors via RC > 1
        - fail: msg="pkill execution has failed because of errors."
          when: pkill_result.rc > 1
    - name: Config rasa
      tags: config
      block:
        - name: Template credentials.yml.j2
          ansible.builtin.template:
            src: templates/credentials.yml.j2
            dest: '{{ checkout_path }}/credentials.yml'
        - name: Template a file to endpoints.yml.j2
          ansible.builtin.template:
            src: templates/endpoints.yml.j2
            dest: '{{ checkout_path }}/endpoints.yml'
    - name: Deploy rasa
      tags: deploy
      block:
        - name: install python deps
          ansible.builtin.shell: python3 -m pip install rasa rasa-sdk openpyxl pandas pyTelegramBotAPI gql
            --no-cache-dir
          args:
            chdir: '{{ checkout_path }}'
        - name: train model
          ansible.builtin.shell: rasa train --domain domain
          args:
            chdir: '{{ checkout_path }}'
        - name: start action server
          ansible.builtin.shell: nohup rasa run actions >> /var/log/rasa_actions.log
            2>&1 &
          args:
            chdir: '{{ checkout_path }}'
        - name: start rasa server
          ansible.builtin.shell: nohup rasa run --credentials credentials.yml --enable-api >> /var/log/rasa_server.log
            2>&1 &
          args:
            chdir: '{{ checkout_path }}'
    - name: Make an initial events fetch
      ansible.builtin.shell: /bin/python3 /root/rasa_base/addons/fetch_events_app_data.py
    - name: Schedule cron job
      ansible.builtin.cron:
        name: Run fetch_events_app_data.py
        # to be run every 60th minute
        minute: "59"
        job: "/bin/python3 /root/rasa_base/addons/fetch_events_app_data.py"